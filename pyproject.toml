[tool.poetry]
name = "pomcorn"
version = "0.3.1"
description = "Base implementation of Page Object Model"
authors = [
  "Saritasa <pypi@saritasa.com>",
]
maintainers = [
    "Anton Oboleninov <anton.oboleninov@saritasa.com>",
]
homepage = "https://pypi.org/project/pomcorn/"
repository = "https://github.com/saritasa-nest/pomcorn/"
documentation = "http://pomcorn.rtfd.io/"
keywords = [
  "python",
  "selenium",
  "webdriver",
  "autotests",
  "page object model",
  "page object pattern",
  "page object",
  "pom",
  "parsing",
  "browser",
]
license = "MIT"
readme = "README.rst"
packages = [
  { include = "pomcorn" }
]

classifiers = [
  "Development Status :: 4 - Beta",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3.12",
  "Topic :: Software Development :: Libraries :: Python Modules",
]

[tool.poetry.dependencies]
python = ">= 3.11, < 4.0"
# Python bindings for Selenium
# https://selenium-python.readthedocs.io/index.html
selenium = ">= 4.12"

[tool.poetry.group.dev.dependencies]
# Improved REPL
ipdb = ">= 0.13.13"
ipython = ">= 8.14.0"
# A framework for managing and maintaining multi-language pre-commit hooks.
# https://pre-commit.com/
pre-commit = ">= 3.3.3"
# Collection of invoke commands
# https://github.com/saritasa-nest/saritasa-python-invocations
saritasa-invocations = ">= 0.8"

[tool.poetry.group.docs.dependencies]
# Need to support autodoc for pomcorn modules
sphinx = ">= 7.2.6"
# The Sphinx theme for docs
# https://sphinx-rtd-theme.readthedocs.io/en/stable/
sphinx-rtd-theme = ">= 1.3.0rc1"

[tool.poetry.group.demo.dependencies]
pytest = ">= 7.4.2"

[tool.poetry.group.linters.dependencies]
# Flake dependencies are added so that VSCode extension for flake8
# would work properly
# https://marketplace.visualstudio.com/items?itemName=ms-python.flake8&ssr=false#overview
flake8 = "^6.1.0"
# A flake8 plugin that warn about backslashes usage.
# https://github.com/wemake-services/flake8-broken-line
flake8-broken-line = "^1.0.0"
# A plugin for Flake8 finding likely bugs and design problems in your program.
# https://github.com/PyCQA/flake8-bugbear
flake8-bugbear = "^23.9.16"
# A simple module that adds an extension for the fantastic pydocstyle tool to flake8.
# https://github.com/PyCQA/flake8-docstrings
flake8-docstrings = "^1.7.0"
# flake8 plugin to validate type annotations according to modern practices.
# https://github.com/plinss/flake8-modern-annotations
flake8-modern-annotations = "^1.5.0"
# A flake8 plugin loading the configuration from pyproject.toml
# https://github.com/john-hen/Flake8-pyproject
flake8-pyproject = "^1.2.3"

# Mypy is a static type checker for Python.
# https://mypy.readthedocs.io/en/stable/
mypy = "^1.7.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.isort]
profile="black"
line_length=79
multi_line_output=3
skip=[
    "_tmp",
    "src",
    ".env",
    "env",
    ".venv",
    "venv",
]
known_pytest=[
    "pytest",
    "_pytest",
    "xdist",
]
sections=[
    "FUTURE",
    "STDLIB",
    "THIRDPARTY",
    "PYTEST",
    "FIRSTPARTY",
    "LOCALFOLDER",
]
include_trailing_comma=true
# For sorting `__all__` sections
# Off until the issue is fixed: https://github.com/PyCQA/isort/issues/2193
# sort_reexports=true

[tool.flake8]
# F403: using wildcard imports (from â€¦ import *)
# F405: name may be undefined, or defined from star imports: module
# D100: missing docstring in public module
# D102: missing docstring in public method
# D103: missing docstring in public function
# D105: missing docstring in magic method
# D106: missing docstring in public nested
# D107: missing docstring in __init__
# PT004: missing add leading underscore in name of fixture that does not return anything
# B008: function calls in argument defaults
ignore = [
    "D100",
    "D102",
    "D103",
    "D105",
    "D106",
    "D107",
    "F403",
    "F405",
    "W503",
    "PT004",
    "B008",
]
exclude = [
    "config",
    ".venv",
    "venv",
    "__init__.py",
]
max-line-length = 79
inline-quotes = "double"
docstring-quotes = "double"
count = true
max-complexity = 10

# flake8-pytest-style configuration
# https://github.com/m-burst/flake8-pytest-style
pytest-fixture-no-parentheses = true
pytest-parametrize-names-type = "list"
pytest-parametrize-values-type = "list"
pytest-parametrize-values-row-type = "list"

[tool.mypy]
# mypy configurations: https://mypy.readthedocs.io/en/latest/config_file.html
# https://mypy.readthedocs.io/en/stable/running_mypy.html#missing-imports
ignore_missing_imports = true
strict = false
warn_no_return = false
disable_error_code = ["override", "no-redef"]
check_untyped_defs = true
exclude = "config|venv|.venv| __init__.py"
disallow_any_generics = true

[tool.black]
line-length=79
